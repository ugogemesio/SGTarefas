
networks:
  my-network:
    driver: bridge

services:
  postgres-user:
    image: postgres:15
    command: ["postgres", "-c", "listen_addresses=*"]
    environment:
      POSTGRES_DB: user_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    networks:
      - my-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    depends_on:
      postgres-user:
        condition: service_healthy
    # env_file:
    #   - .env.user_service
    ports:
      - "8080:8080"
    networks:
      - my-network

  postgres-task:
    image: postgres:15
    command: ["postgres", "-c", "listen_addresses=*"]
    # environment:
    #   POSTGRES_DB: task_service
    #   POSTGRES_USER: postgres
    #   POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_task_data:/var/lib/postgresql/data
    networks:
      - my-network

  task-service:
    build:
      context: ./task-service
      dockerfile: Dockerfile
    depends_on:
      postgres-task:
        condition: service_healthy
    env_file:
      - .env.task_service
    ports:
      - "8081:8080"
    networks:
      - my-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    networks:
      - my-network

volumes:
  postgres_user_data:
  postgres_task_data: